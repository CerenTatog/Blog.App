@model ArticleViewModel
@using Blog.BLL.Helper;
@inject IHttpContextAccessor Accessor
@{
	Layout = "_Layout";
	var user = Accessor.HttpContext.Session.Get<UserViewModel>("user");
}

<section id="blog" class="blog">
	<div class="container" data-aos="fade-up">

		<div class="row">

			<div class="col-lg-8 entries">

				<div class="blog-author d-flex align-items-center">
					<img src="assets/img/blog/blog-author.jpg" class="rounded-circle float-left" alt="">
					<div>
						<h4>@Model.AuthorName</h4>
						<div class="social-links">
							<a href="https://twitters.com/#"><i class="bi bi-twitter"></i></a>
							<a href="https://facebook.com/#"><i class="bi bi-facebook"></i></a>
							<a href="https://instagram.com/#"><i class="biu bi-instagram"></i></a>
						</div>
						<p>
							Itaque quidem optio quia voluptatibus dolorem dolor. Modi eum sed possimus accusantium. Quas repellat voluptatem officia numquam sint aspernatur voluptas. Esse et accusantium ut unde voluptas.
						</p>
					</div>
				</div><!-- End blog author bio -->

				<article class="entry entry-single">

					<div class="entry-img">
						<img src="~/uploads/@Model.CoverPictureUrl" alt="" class="img-fluid">
					</div>

					<h2 class="entry-title">
						@Model.Title
					</h2>

					<div class="entry-meta">
						<ul>
							<li class="d-flex align-items-center"><i class="bi bi-person"></i>@Html.RouteLink(Model.AuthorName, routeName: "authordetail", routeValues: new { controller = "UserProfile", action = "Profile", authorUrl = Model.UserUrl}/*,new { @class = "linkBlck" }*/)</li>
							<li class="d-flex align-items-center"><i class="bi bi-clock"></i><a><time datetime="">@Model.CreatedTimeStr</time></a></li>
							<li class="d-flex align-items-center"><i class="bi bi-chat-dots"></i> <a>@Model.CommentCount Yorum</a></li>
						</ul>
					</div>

					<div class="entry-content">
						@Html.Raw(Model.Content)
					</div>

					<div class="entry-footer">
						<i class="bi bi-tags"></i>
						<ul class="tags">
							@foreach (var item in Model.ArticleTags)
							{
								<li>@Html.RouteLink(item.TagName, routeName: "tagdetail", routeValues: new { controller = "Article", action = "ArticleByTag", tagUrl = @item.TagUrl}/*,new { @class = "linkBlck" }*/)</li>
							}

						</ul>
					</div>

				</article><!-- End blog entry -->



				<div class="blog-comments">
					<div id="blogComments">
						@await Component.InvokeAsync("ArticlesComment", new {articleId = Model.Id})
					</div>
					@if (user != null)
					{
						<div class="reply-form">
							<h4>Leave a Reply</h4>
							<form action="">
								<div class="row">
									<div class="col form-group">
										<textarea id="commentText" name="comment" class="form-control" placeholder="Yorumunuzu yazınız..."></textarea>
									</div>
								</div>
								<button type="button" onclick="AddComment()" class="btn btn-primary">Gönder</button>
							</form>

						</div>
					}


				</div><!-- End blog comments -->

			</div><!-- End blog entries list -->

			<div class="col-lg-4">

				<div class="sidebar">

					<h3 class="sidebar-title">Ara</h3>
					<div class="sidebar-item search-form">
						<form action="">
							<input type="text">
							<button type="submit"><i class="bi bi-search"></i></button>
						</form>
					</div><!-- End sidebar search formn-->


					<h3 class="sidebar-title">Güncel Makaleler</h3>
					<div class="sidebar-item recent-posts">
						@await Component.InvokeAsync("LatestArticles")

					</div><!-- End sidebar recent posts-->

					<h3 class="sidebar-title">Etiketler</h3>
					<div class="sidebar-item tags">
						<ul>
							@await Component.InvokeAsync("AllTag")
						</ul>
					</div><!-- End sidebar tags-->

				</div><!-- End sidebar -->

			</div><!-- End blog sidebar -->

		</div>

	</div>
</section><!-- End Blog Single Section -->
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		function AddComment() {
			var obj = {
				Comment: $('#commentText').val(),
				ArticleId: parseInt('@Model.Id')
			};
			$.ajax({
				url: "/Article/AddComments",
				data: JSON.stringify(obj),
				type: "POST",
				contentType: "application/json;charset=utf-8",
				success: function (result) {
					$("#blogComments").html(result);
				},
				error: function (errormessage) {
					alert(errormessage.responseText);
				},
			});
		}

	</script>
}
